<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://kennethrioja.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://kennethrioja.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-11-02T08:11:44+00:00</updated><id>https://kennethrioja.github.io/feed.xml</id><title type="html">blank</title><subtitle>Research, EdTech, Video Games, Data Analysis, UX </subtitle><entry><title type="html">How to substring in R</title><link href="https://kennethrioja.github.io/blog/2024/substring-in-R/" rel="alternate" type="text/html" title="How to substring in R"/><published>2024-06-23T13:00:00+00:00</published><updated>2024-06-23T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/substring-in-R</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/substring-in-R/"><![CDATA[<p>Do a sub(sub())!</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sub(".*Energy", "", sub("Prop.*","","EnergyFossilProp"))
</code></pre></div></div>]]></content><author><name></name></author><category term="university"/><category term="code"/><category term="data"/><summary type="html"><![CDATA[Do a sub(sub())!]]></summary></entry><entry><title type="html">How to begin a script or project in R?</title><link href="https://kennethrioja.github.io/blog/2024/how-to-begin-a-script-or-project-in-r/" rel="alternate" type="text/html" title="How to begin a script or project in R?"/><published>2024-05-29T13:00:00+00:00</published><updated>2024-05-29T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/how-to-begin-a-script-or-project-in-r</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/how-to-begin-a-script-or-project-in-r/"><![CDATA[<p>If you have never heard about snippets, it is like an autocompletion that <strong>you</strong> have written in advance. At the end of this blog post, you will be able to write a project skeleton to begin your R project as well as being able to write a snippet. The project skeleton includes packages installation, csv/xlsx import, .csv / .pdf / .RData export.</p> <p>For the advanced people willing to have a hands-on solution, you can directly jump to the <a href="#snippets">end of this article</a> to copy-paste the header snippet.</p> <h2 id="building-your-project-skeleton">Building your project skeleton</h2> <h3 id="description">Description</h3> <p>When I read any kind of script, I like to read about what this script is all about, who wrote it, why and when. In order to do this, you can begin any project with this kind of header (Do not forget to open a new project (Cmd + Shift + N)) :</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## /\ ----
## __________________________
## Title:
## Author: NAME SURNAME, INSTITUTION
## Email: johndoe@example.com
## Date Created: 2024-05-29
## __________________________
## Code Outline:
## 1. ...
## 2. ...
## __________________________
## Notes:
##  
## __________________________
</code></pre></div></div> <p>Here you can write more about the specs of your code, maybe the Code Outline is a bit overkill here, it depends on what you want to convey.</p> <h3 id="initial-setup">Initial setup</h3> <p>I love having a structured code and easy to navigate. Like this blog post and its different titles and sub-titles (for example, &lt;h1&gt;, &lt;h2&gt; for HTML), you can do this in R too! Here is the first header I always have in my projects:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Top ----
</code></pre></div></div> <p>Ok, thanks but how does it makes the code easier to navigate? Click on the icon with lines on the top right of the file panel, next to “Source”. Taa-daa! You can now see and click on “Top” to make your cursor in the selected header. Neat!</p> <p>Let’s get into the initial setup now, try to understand the following code :</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Clear workspace
rm(list=ls())

## Seed for random number generation
set.seed(42)

## Load packages
# install.packages("pacman")
library(pacman)
pacman::p_load(
# insert packages' name here
  "rstudioapi"
)

## Set working directory to current folder
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# getwd()
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">rm(list=ls())</code> is used to clear the current environment</p> <p><code class="language-plaintext highlighter-rouge">set.seed(42)</code> was a mystic function when I began coding in R. It affects random generation of numbers, plots in the way that when you run this function before any random generation, it will always create the same value for a random number or the same organisation for a plot. In short, it is necessary when you want to be reproducible when using random generation.</p> <p><code class="language-plaintext highlighter-rouge">p_load()</code> coming from the package <code class="language-plaintext highlighter-rouge">pacman</code> (as we can see by the namespace used before the function, <code class="language-plaintext highlighter-rouge">thisisanamespace::thisisafunction()</code>) allows to <code class="language-plaintext highlighter-rouge">install.packages()</code> and <code class="language-plaintext highlighter-rouge">library()</code> at the same time. You can continue adding packages by writing them in brackets and separated by a coma.</p> <p><code class="language-plaintext highlighter-rouge">setwd(dirname(rstudioapi::getSourceEditorContext()$path))</code> allows to set the working directory to the path of the current project. If you have followed this tutorial and you run this, you can see that it displays an error, this is because you have not saved your project somewhere. Save your project, rerun the line, it works, <em>bravo</em>.<br/> If you want to check what your current working directory is, run <code class="language-plaintext highlighter-rouge">getwd()</code>.</p> <h3 id="load-environment-or-csv">Load environment or csv</h3> <p>As easy as it is, here is the code :</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Load environment or read .csv files
load(".RData")
df &lt;- read.csv(".csv")
</code></pre></div></div> <h3 id="more-headers">More headers!</h3> <p>Here is how you write more headers :</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## 1. ... ----

### 1.1 ... ----

#### 1.1.1 ... ----

## 2. ... ----
</code></pre></div></div> <p>You can see your right panel being updated with these new headers!</p> <h3 id="save">Save</h3> <p>At the end of each project you must export something, either a cleaned version of the raw data you have in a .csv format, either a plot that you want to show to your collaborators in .pdf, or a whole .RData environment to begin your analyses in a fresh start. Here is my workflow for each of these steps. Modify it so that is suits your needs !</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Save ----
output_dir = "./output"
proj_name = "projname"
name_raw = paste(output_dir, '/', proj_name, '_', gsub('-','',Sys.Date()), sep='')

dir.create(output_dir, showWarnings = T)

## Save df into a csv
write.csv(df, paste(name_raw, ".csv", sep=''), row.names=FALSE)

## Save a plot into a pdf
pdf(file=paste(name_raw, ".pdf", sep=''), onefile = TRUE)
## Run your ggplot here
dev.off()

rm(output_dir, proj_name, name_raw)

## Save environment
save.image(gsub(" ","",paste("output/environment_mem_",gsub("-","",Sys.Date()),".RData")))
</code></pre></div></div> <h2 id="snippets">Snippets</h2> <p>First go to <em>Edit</em> &gt; <em>Preferences</em>, on the left of the newly displayed window click on <em>Code</em> then on the bottom of the page click on <em>Edit Snippets…</em>. Copy and paste the following code in line 1 of the current window. Make sure to have a line break at the end of the code.</p> <p>Once pasted, click on <em>Save</em> &gt; <em>Apply</em> &gt; <em>OK</em>. Now type <code class="language-plaintext highlighter-rouge">head</code> and you should see an autocompletion suggestion of <code class="language-plaintext highlighter-rouge">header</code> which is a snippet, press <em>Enter</em> and here it is!</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snippet header
	## __________________________
	## Title:
	## Author: NAME SURNAME, INSTITUTION
	## Email: 
	## Date Created: `r Sys.Date()`
	## __________________________
	## Code Outline:
	## 1. ...
	## 2. ...
	## __________________________
	## Notes:
	##  
	## __________________________
	
	## Top ----
	## clear workspace
	rm(list=ls())

	## Seed for random number generation
	set.seed(42)
	
	## Load packages
	# install.packages("pacman")
	library(pacman)
	pacman::p_load(
	# insert packages' name here
 		"rstudioapi",
		"dplyr"
	)
	
	## Set working directory to current folder
	setwd(dirname(rstudioapi::getSourceEditorContext()$path))
	
	## Load environment or read .csv files
	load("mydata.RData")
	df &lt;- read.csv("")
	
	## 1. ... ----

	### 1.1 ... ----

	#### 1.1.1 ... ----

	## 2. ... ----

	## Save ----
	output_dir = "./output"
	proj_name = "projname"
	name_raw = paste(output_dir, '/', proj_name, '_', gsub('-','',Sys.Date()), sep='')
	
	dir.create(output_dir, showWarnings = T)
	
	# Save df into a csv
	write.csv(df, paste(name_raw, ".csv", sep=''), row.names=FALSE)

	# Save a plot into a pdf
	pdf(file=paste(name_raw, ".pdf", sep=''), onefile = TRUE)
	# run your ggplot here
	dev.off()
	
	rm(output_dir, proj_name, name_raw)

	# Save environment
	save.image(gsub(" ","",paste("output_dir/environment_mem_",gsub("-","",Sys.Date()),".RData")))

</code></pre></div></div>]]></content><author><name></name></author><category term="work"/><category term="data"/><category term="code"/><summary type="html"><![CDATA[Write a snippet with the initial script skeleton!]]></summary></entry><entry><title type="html">How to create csv and pdf files in R?</title><link href="https://kennethrioja.github.io/blog/2024/how-to-create-csv-and-pdf-files-in-r/" rel="alternate" type="text/html" title="How to create csv and pdf files in R?"/><published>2024-05-24T13:00:00+00:00</published><updated>2024-05-24T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/how-to-create-csv-and-pdf-files-in-r</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/how-to-create-csv-and-pdf-files-in-r/"><![CDATA[<p>This example provides you with a way to create an <code class="language-plaintext highlighter-rouge">output</code> directory at the root of your R project and writes a csv and a pdf with the current date at the end of its name.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Clear workspace
rm(list=ls())

## Seed for random number generation
set.seed(42)

## Set working directory to current path 
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# getwd()

## Reproducible example
df &lt;- mtcars
output_dir = "./output"
proj_name = "projname"
name_raw = paste(output_dir, '/', proj_name, '_', gsub('-','',Sys.Date()), sep='')

## Create directory
dir.create(output_dir, showWarnings = T)

## Create csv
write.csv(df, paste(name_raw, ".csv", sep=''))

## Create pdf
pdf(file=paste(name_raw, ".pdf", sep=''), onefile = TRUE)
plot(df$cyl, df$mpg)
dev.off()

rm(output_dir, proj_name, name_raw)

## Save environment
save.image(paste(name_raw, ".RData", sep=''))
</code></pre></div></div>]]></content><author><name></name></author><category term="work"/><category term="data"/><category term="code"/><summary type="html"><![CDATA[A short and concise example.]]></summary></entry><entry><title type="html">How to collaborate in Unity using GitHub?</title><link href="https://kennethrioja.github.io/blog/2024/how-to-collaborate-in-unity-using-github/" rel="alternate" type="text/html" title="How to collaborate in Unity using GitHub?"/><published>2024-05-17T13:00:00+00:00</published><updated>2024-05-17T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/how-to-collaborate-in-unity-using-github</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/how-to-collaborate-in-unity-using-github/"><![CDATA[<p>Let me be clear.</p> <blockquote> <p>You <strong>cannot</strong> work synchronously on one same interface in Unity.</p> </blockquote> <p>I have worked on several Unity projects and the general workflow we adopted with my team is to separately work on each of a feature, and once it is done, implement it in our “final scene”.</p> <p>Legend:</p> <ul> <li>(All/One/Others), means that the bullet point should be done by ‘All’ team members, ‘One’ team member, the ‘Others’ from your team.</li> <li><code class="language-plaintext highlighter-rouge">git commit -m "&lt;something-here&gt;"</code> means that you can replace <code class="language-plaintext highlighter-rouge">&lt;something-here&gt;</code> to whatever you want, like <code class="language-plaintext highlighter-rouge">git commit -m "I write what I want"</code>.</li> </ul> <p>Here are the steps to cooperate on the same Unity project:</p> <h2 id="setup-the-cooperation">Setup the cooperation</h2> <ol> <li> <p>(All) <a href="https://unity.com/releases/editor/qa/lts-releases">Download and install the same Long Term Support release of Unity</a></p> </li> <li> <p>(One) Open Unity, click on “New Project”, choose your location, do not connect to Unity Cloud and click on “Create Project”.</p> </li> <li> <p>(One) In Unity, go in <code class="language-plaintext highlighter-rouge">Assets/Scenes</code> and copy-paste the <code class="language-plaintext highlighter-rouge">SampleScene</code> and rename it <code class="language-plaintext highlighter-rouge">MainScene</code>. Conflicts may rise due to working in the same Scene. This is why each and every team member will work on a copy of this <code class="language-plaintext highlighter-rouge">MainScene</code>. The trick is to work separately on your own copied scene and implement in <code class="language-plaintext highlighter-rouge">MainScene</code> what you have done once you feel you have something finished to be implemented.</p> </li> <li> <p>(All) If not done yet, <a href="https://github.com/signup?user_email=&amp;source=form-home-signup">create a GitHub account</a></p> </li> <li> <p>(One) <a href="https://github.com/new">Create a repository on GitHub</a> : no template, enter your repository name and description, keep it public, tick ‘Add a README.md’, add a .gitignore and choose ‘Unity’, if you don’t know what license to use, choose GNU v3.0 or CC0 v1.0.</p> </li> <li> <p>(One) On GitHub, click on “Code” the big green button, choose “SSH”, click on the copy icon.</p> </li> <li>(One) On your computer, open a terminal, navigate to the directory where you have your freshly new Unity project and type the following commands: <ul> <li><code class="language-plaintext highlighter-rouge">git init</code> to initialize git in your directory</li> <li><code class="language-plaintext highlighter-rouge">git checkout -b &lt;my-branch-name&gt;</code> to create creating a branch name <code class="language-plaintext highlighter-rouge">&lt;my-branch-name&gt;</code> (you can choose another one)</li> <li><code class="language-plaintext highlighter-rouge">git remote add origin &lt;paste-the-ssh-here&gt;</code> to link your local git to the remote one</li> <li><code class="language-plaintext highlighter-rouge">git pull origin main</code> to download the .gitignore, README.md and LICENCE files.</li> <li><code class="language-plaintext highlighter-rouge">git add .</code> to add to staging the Unity project you’ve created</li> <li><code class="language-plaintext highlighter-rouge">git commit -m "chore(setup): adding project"</code> to commit the files and making them ready to be pushed</li> <li><code class="language-plaintext highlighter-rouge">git push --set-upstream origin &lt;my-branch-name&gt;</code></li> </ul> </li> <li> <p>(One) Once you’ve done this, when going to the project’s main page in github, you would see a yellow rectangle asking for “Compare &amp; pull request”, click on this button. Normally it should be “Able to merge”, click on “Create a pull request” &gt; “Merge pull request” &gt; “Confirm merge” &gt; “Delete branch”</p> </li> <li> <p>(One) Go now on “Settings” &gt; “Collaborators”, and “Add people” who you want them to be part of the project.</p> </li> <li>(Others) Accept the invitation to collaborate on GitHub and copy the SSH link, go to a terminal and get to the directory you want to create a clone of the repository. Execute these commands : <ul> <li><code class="language-plaintext highlighter-rouge">git clone &lt;paste-the-ssh-here&gt;</code>, now you should be able to see the exact same repository than your colleague and GitHub.</li> <li><code class="language-plaintext highlighter-rouge">git checkout -b &lt;my-awesome-branch-name&gt;</code>, to create another branch and not work on <code class="language-plaintext highlighter-rouge">main</code>.</li> <li><code class="language-plaintext highlighter-rouge">git status</code>, to see on what branch you are + see the files you have modified, you should be in my-awesome-branch-name</li> </ul> </li> <li>(All) Be sure to make a copy of <code class="language-plaintext highlighter-rouge">MainScene</code> and you can begin to create in your scene.</li> </ol> <h2 id="merge-request">Merge Request</h2> <p>Now that you have finished a feature and/or implemented it on the <code class="language-plaintext highlighter-rouge">MainScene</code>, be sure to be on your branch, execute <code class="language-plaintext highlighter-rouge">git status</code> to be able to see where you are.</p> <p>Once in your branch and you saw the files you have modified, run the following commands in your terminal :</p> <ul> <li><code class="language-plaintext highlighter-rouge">git add .</code></li> <li><code class="language-plaintext highlighter-rouge">git commit -m "&lt;your-message-here&gt;"</code></li> <li><code class="language-plaintext highlighter-rouge">git push --set-upstream origin &lt;your-awesome-branch-name&gt;</code></li> </ul> <p>Like the point 6. above : Go to the project’s main page in github, you would see a yellow rectangle asking for “Compare &amp; pull request”, click on this button. Normally it should be “Able to merge”, click on “Create a pull request” &gt; “Merge pull request” &gt; “Confirm merge” &gt; “Delete branch”</p> <p>Go back to your terminal, run :</p> <ul> <li><code class="language-plaintext highlighter-rouge">git checkout -b &lt;another-branch&gt;</code></li> <li><code class="language-plaintext highlighter-rouge">git pull origin main</code></li> </ul> <p>And you are ready to go for another round!</p>]]></content><author><name></name></author><category term="videogames"/><category term="code"/><category term="hobby"/><summary type="html"><![CDATA[A tutorial to work asynchronously on a Unity project.]]></summary></entry><entry><title type="html">How I upgraded my graphic design skills</title><link href="https://kennethrioja.github.io/blog/2024/how-i-upgraded-my-graphic-design-skills/" rel="alternate" type="text/html" title="How I upgraded my graphic design skills"/><published>2024-05-08T13:00:00+00:00</published><updated>2024-05-08T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/how-i-upgraded-my-graphic-design-skills</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/how-i-upgraded-my-graphic-design-skills/"><![CDATA[<p>During the past two months I took graphic design courses using <a href="https://affinity.serif.com/en-gb/">Affinity</a> Publisher and Designer. When finding arguments to justify paying 100.- to attend this course, I had a global objective in mind: “Be familiar with an <em>easy-to-use</em> Mac app to be able to digitally create and design”, and more precisely: “Be able to create UI icons or Instagram posts for the next video games made by <a href="https://www.instagram.com/verykoolgames/">Very Kool Games</a>”.</p> <p>However, we did not have on going projects at this time so I decided to use the recently acquired skills to create a poster for an event I was organising and here is the result:</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"></div> <div class="col-sm mt-3 mt-md-0"> <a href="https://www.instagram.com/wizstreetcomp/" target="_blank"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog_gwscposter-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog_gwscposter-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog_gwscposter-1400.webp"/> <img src="/assets/img/blog_gwscposter.jpeg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="geneva wiz street comp poster" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </div> <div class="col-sm mt-3 mt-md-0"></div> </div> <p>Also when creating the instagram page of the event, I wanted something visually appealing when arriving on the page, so I created a personalized grid to display the multiple sponsors of the event:</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"></div> <div class="col-sm mt-3 mt-md-0"> <a href="https://www.instagram.com/wizstreetcomp/"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog_gwscgrid-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog_gwscgrid-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog_gwscgrid-1400.webp"/> <img src="/assets/img/blog_gwscgrid.jpeg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="geneva wiz street comp instagram grid" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </div> <div class="col-sm mt-3 mt-md-0"></div> </div> <p>What I want to say here is that, when you engage yourself in a course, hackathon, gamejam or or if you are learning something, find a quick project to apply this knowledge during or right after the event. During the event where you are learning something, focus your time and energy on this specific aim. Ask specific questions to the mentors or teachers who are present. And ultimately, show that you have done it 😉</p>]]></content><author><name></name></author><category term="ui"/><category term="hobby"/><category term="misc"/><summary type="html"><![CDATA[Using Affinity Designer for social media posts]]></summary></entry><entry><title type="html">Les jeux vidéo, amis ou ennemis des capacités d’apprentissage?</title><link href="https://kennethrioja.github.io/blog/2024/les-jeux-video-amis-ou-ennemis-des-capacites-d-apprentissage/" rel="alternate" type="text/html" title="Les jeux vidéo, amis ou ennemis des capacités d’apprentissage?"/><published>2024-03-28T13:00:00+00:00</published><updated>2024-03-28T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/les-jeux-video-amis-ou-ennemis-des-capacites-d-apprentissage</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/les-jeux-video-amis-ou-ennemis-des-capacites-d-apprentissage/"><![CDATA[]]></content><author><name></name></author><category term="university"/><category term="research"/><category term="videogames"/><summary type="html"><![CDATA[Une discussion avec deux membres du Brain and Learning Lab]]></summary></entry><entry><title type="html">We got the second place at UPsi Game Jam 2024!</title><link href="https://kennethrioja.github.io/blog/2024/we-got-the-second-place-at-the-upsi-jam-2024/" rel="alternate" type="text/html" title="We got the second place at UPsi Game Jam 2024!"/><published>2024-03-24T13:00:00+00:00</published><updated>2024-03-24T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/we-got-the-second-place-at-the-upsi-jam-2024</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/we-got-the-second-place-at-the-upsi-jam-2024/"><![CDATA[<div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/games_astralchamber1-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/games_astralchamber1-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/games_astralchamber1-1400.webp"/> <img src="/assets/img/games_astralchamber1.jpeg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="astral chamber video game" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><a href="https://benjaminvermot.ch/index.html">Benjamin Vermot</a>, <a href="https://www.linkedin.com/in/victor-vermot-petit-outhenin-02786b23b/">Victor Vermot</a> and I, aka. <a href="https://www.instagram.com/verykoolgames/">VeryKoolGames</a>, participated in March 2024 at the <a href="https://upsijam.ch/">UPsi Game Jam</a>. The event was hosted in Neûchatel at the campus Arc 2 de la HE-Arc by <a href="https://www.linkedin.com/in/alexander-wohlfahrt/">Alexander Wohlfahrt</a>. The goal of the game jam was to create a video game in forty-two hours under the theme ‘confined’ and publish it on <a href="https://itch.io/">itch.io</a>.</p> <blockquote> <p>“<em>Incroyable, la qualité des enigmes, c’est insane. Et très beau design. Bravo!</em>” – comment by <a href="https://itch.io/profile/krucksy">Krucksy</a> on <a href="https://kennethrioja.itch.io/astralchamber">itch.io</a>.</p> </blockquote> <p>🎮 <a href="https://kennethrioja.itch.io/astralchamber">Play our game here</a>, then read how the entire process went during the jam.</p> <p>It was challenging to make a game out of a well-known and somewhat negatively connotated word: “<em>confined</em>”. Because it was not our first game jam together, we discussed prior the event on the improvement of our workflow. Indeed, we felt we were moving way too fast to the coding and designing aspects before even having a strong core, story or level design. We were also interested in making a game using a cube to be able to use the 3D engine of Unity.</p> <p>This is what we did in the first hours of the game jam : <strong>to set a strong common ground</strong>. Being crystal clear about what our game is, what is its genre, what is the story and what is the primary mechanic. It is also important that we, as active members and part of the group, are being assigned tasks that would drive us and fit our individual growth needs. We then built the story behind the game mechanic to make the theme fit : our main character is “confined” in a cube and the player must solve puzzles to set him free.</p> <p>Right. We know the time runs amazingly fast in a game jam and we must <strong>set our limits</strong>. How many puzzles then ? How do we share the tasks between us ? What are the deadlines ? Alexander gave us an advice on the Discord channel with the <strong>MoSCoW</strong> method : Must do, Should do, Could do, Won’t do. We then did our classical brainstorming, during ten minutes, writing as much puzzle ideas as possible, then present them to the team without being interrupted. We then discussed the ideas and tried to fusion some of the ideas together if we saw complementarity. Finally, we chose four puzzles to dispatch along the six faces of our cube. During this phase, I had a clear idea and the programming logic for the current third face, which was challenged by Victor. I had to defend my idea by demonstrating step-by-step how I would make the puzzle work. I liked how Victor naturally took the role of a devil’s advocate because it obliged me to be clear on my proof demostration.</p> <p>Since we already knew each other, tasks-sharing was based on our field of expertise. Our lead graphic designer, Ben, was creating all the visual assets. Victor and I shared the programming of the puzzles, I was mainly on the three first faces and Victor did the three last faces. When I wanted to do something else, I wrote the story and we also found the music and audio effects together with Victor.</p> <p>This game allowed me to be more familiar with animations. Moreover, group-wise, we were genuinely satisfated by how we planned our tasks because at the end we had a solid gameplay core with four challenging puzzles. Our game was playable from the begining until the end at the end of the jam – let me remind you we did it in only forty-two hours !</p> <p>Also this game was the first for us to win a second place 🥈 in a competition ! We are grateful for everyone’s feedbacks and positive evaluations, it makes us want to move forward and continue what we began together !</p> <p>If you haven’t done it yet, please follow our <a href="https://www.instagram.com/verykoolgames/">Instagram account @VeryKoolGames</a> and we would be delighted to have a friendly comment or a DM if you liked our game !</p> <hr/> <p>A take-home message if you want to do a game jam :</p> <ol> <li><em>Set a common ground where everyone is aligned on the group direction and where you can meet one of your need</em>. For example, brainstorm on the game ideas and direction then decide what you will do by explicitely communicating to the group one of your personal goal / need : “I would like to do (task assigned) because I can (personal acquired skill) and I want to develop (personal growth need).”</li> <li><em>Set your limits</em>. By limits, I mean in terms of your skills and the time available. Before going to the jam, be clear about yourself and what you can offer to a group. Overselling your self here is not necessary if you cannot do what you said you can do. And once the game idea is commonly accepted, set strict deadlines.</li> </ol>]]></content><author><name></name></author><category term="hobby"/><category term="code"/><category term="videogames"/><summary type="html"><![CDATA[Do you like escape games?]]></summary></entry><entry><title type="html">Using mutate with multiple conditions including grepl in R</title><link href="https://kennethrioja.github.io/blog/2024/using-mutate-with-multiple-conditions-including-grepl-in-r/" rel="alternate" type="text/html" title="Using mutate with multiple conditions including grepl in R"/><published>2024-03-15T13:00:00+00:00</published><updated>2024-03-15T13:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/using-mutate-with-multiple-conditions-including-grepl-in-r</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/using-mutate-with-multiple-conditions-including-grepl-in-r/"><![CDATA[<p>In my case, I had one <code class="language-plaintext highlighter-rouge">id</code> containing two games/sessions, as shown by different dates in my column <code class="language-plaintext highlighter-rouge">timeStamp</code> which is of <code class="language-plaintext highlighter-rouge">char</code> data type in the raw data.</p> <p>The example below shows how I differenciated the two IDs. Let’s say the second player played the game on March 14, 2024 and I want to change it’s <code class="language-plaintext highlighter-rouge">id</code> to <code class="language-plaintext highlighter-rouge">"2"</code>.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df &lt;- raw %&gt;%
  dplyr::mutate(id = ifelse((grepl("^20240314.*$", timeStamp, ignore.case = TRUE) # if timeStamp begins by "20240314"
                              &amp; id == "1"), # and id is "1"
                              "2", # change id to "2"
                              id)) # else keep it as is
</code></pre></div></div> <hr/> <p>Regex tips:</p> <p><code class="language-plaintext highlighter-rouge">^</code> marks the begining of the string, <code class="language-plaintext highlighter-rouge">.*</code> marks anything (like the <code class="language-plaintext highlighter-rouge">*</code> in bash), and <code class="language-plaintext highlighter-rouge">$</code> marks the end of the string (like <code class="language-plaintext highlighter-rouge">$</code> in vim to go to the end of the line)</p>]]></content><author><name></name></author><category term="R"/><category term="data"/><category term="code"/><summary type="html"><![CDATA[Damn it Regex]]></summary></entry><entry><title type="html">Screen consumption recommendations during early childhood</title><link href="https://kennethrioja.github.io/blog/2024/screen-consumption-recommendations-during-early-childhood/" rel="alternate" type="text/html" title="Screen consumption recommendations during early childhood"/><published>2024-02-27T20:00:00+00:00</published><updated>2024-02-27T20:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/screen-consumption-recommendations-during-early-childhood</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/screen-consumption-recommendations-during-early-childhood/"><![CDATA[<p>I am getting surrounded by more and more young parents and if I were to provide them with scientific-based recommendations in two minutes, I would redirect them to <a href="https://www.unige.ch/fapse/sensori-moteur/membres/eg">Edouard Gentaz</a>’ recommendations:</p> <ol> <li>Limit screen consumption as best as you can before two years old.</li> <li>No screen during meals (to limit or avoid <a href="https://www.academia.edu/15735501/_Technoference_Everyday_Intrusions_and_Interruptions_of_Technology_in_Couple_and_Family_Relationships">technoference</a>, also applicable to your couple life!)</li> <li>No screen during waking-up in the morning.</li> <li>Avoid alone and passive consumption for the child.</li> <li>Control the quality of what’s been consumed.</li> </ol> <p>Edouard Gentaz is a professor at the faculty of Psychology of the University of Geneva. The above points come from a public seminar I highly enjoyed and I encourage you to <a href="https://www.youtube.com/watch?v=kXtX3C9SchE">watch the whole talk on YouTube</a>!</p> <p>If you are interested in the topic of screens and children / adolescents, the <a href="https://www.unige.ch/centre-piaget/activites-scientifiques/seminaire-piaget/2024">Centre Jean Piaget</a> (<a href="https://www.unige.ch/fapse/">FPSE, University of Geneva</a>) is currently offering public seminars, every Wednesday at 18:15 in room M1170 at <a href="https://www.google.fr/maps/place/Uni+Mail,+Bd+du+Pont-d'Arve+40,+1205+Gen%C3%A8ve/@46.1949191,6.1372961,17z/data=!3m1!4b1!4m6!3m5!1s0x478c7ad59a95c06f:0x405b734617bdd72c!8m2!3d46.1949154!4d6.139871!16s%2Fg%2F1tdyppds?entry=ttu">Unimail</a>.</p>]]></content><author><name></name></author><category term="university"/><category term="research"/><category term="psychology"/><summary type="html"><![CDATA[Are you pro or anti screen?]]></summary></entry><entry><title type="html">What would be the learning space of your dreams?</title><link href="https://kennethrioja.github.io/blog/2024/eduspace-challenge/" rel="alternate" type="text/html" title="What would be the learning space of your dreams?"/><published>2024-02-06T14:00:00+00:00</published><updated>2024-02-06T14:00:00+00:00</updated><id>https://kennethrioja.github.io/blog/2024/eduspace-challenge</id><content type="html" xml:base="https://kennethrioja.github.io/blog/2024/eduspace-challenge/"><![CDATA[<div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blog_edsc2024-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blog_edsc2024-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blog_edsc2024-1400.webp"/> <img src="/assets/img/blog_edsc2024.jpeg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="eduspace challenge team 2024" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Finding Kenneth 🔍 </div> <blockquote> <p>For french speaking folks, you can visit the CIEL (Communauté d’intérêts pour l’enseignement en ligne) blog post I have written : <a href="https://ciel.unige.ch/2024/04/pourquoi-aimez-vous-vous-etudier-dans-un-cafe-ou-pas-retour-dexperience-dun-etudiant-maltt-a-leduspace-challenge/">https://ciel.unige.ch/2024/04/pourquoi-aimez-vous-vous-etudier-dans-un-cafe-ou-pas-retour-dexperience-dun-etudiant-maltt-a-leduspace-challenge/</a></p> </blockquote> <p>All started by a post in the internal forum of the Master <a href="https://maltt.unige.ch/">MALTT</a>. Students from all over Switzerland were invited to take part of a hackathon during the <a href="https://eduhubdays2024.events.switch.ch/">EduHub Days</a> in Winterthur. The pitch: two days in <a href="https://www.zhaw.ch/fr/universite/">ZHAW</a>, use Design Thinking to ideate on future learning spaces.</p> <p>After applicating to the call, I got selected to be part of this adventure! Thank you <a href="https://www.linkedin.com/in/lisa-messenzehl-5b777b19a/">Lisa</a>, <a href="https://www.linkedin.com/in/tereza-karag%C3%BClle-405503b2/">Tereza</a> and <a href="https://www.switch.ch/">Switch</a> for the opportunity!</p> <p>First day, on February 7, we attended a key note by <a href="https://www.james858499.net/">James Lamb</a> about post digital learning spaces of higher education (<a href="https://link.springer.com/article/10.1007/s42438-021-00279-9">Lamb et al., 2021</a>). A learning space is any setting where learning and teaching activities take place. Also a learning space is heavily contingent on the context, so this is why he gave us not tips, but ways on how to build the best learning space. He made a list of six points :</p> <ol> <li><em>An online space is always also a physical space</em>. As he mentionned <a href="https://doi.org/10.1007/s42438-021-00265-1">Gourlay (2021)</a>, there are no ‘virtual learning’, the learning is always a true experience.</li> <li><em>Create space for imagination</em>. He emphasized that digital technology must be seen as a ressource (active in the process) and not as a passive tool.</li> <li><em>Innovation without exclusion</em>. “All students like this”, well… maybe not! James mentionned that we should be able to achieve through mixed reality what cannot be achieved in physical or online (<a href="https://doi.org/10.1080/14626268.2018.1511601">Flint et al., 2018</a>).</li> <li><em>Attend to the aesthetics, emotional &amp; sensory elements of a learning space</em>. This point resonated in me. Aesthetics matter indeed, but we are often not taught much about the importance of aesthetics. “It is of first importance to make a learning space work in a mechanical way, the aesthetics come after”, this is what I often hear unfortunately. Only few passionate students are able to create something at the same level of design and aesthetic than most of the new tech companies.</li> <li><em>Pursue pleasure and make room for play</em>. There should be a link between formal and informal learning spaces (<a href="https://brill.com/downloadpdf/book/9789460916090/BP000005.pdf">Boys, 2011</a>) and the environment should be pleasant (e.g., plants, color, light, music).</li> <li><em>Every learning space should be assigned in harmony with our natural world</em>. We must “reimagine sustainable forms of education technology” (<a href="https://www.academia.edu/download/98619725/Unesco_Background_Ed_Tech.pdf">Facer &amp; Selwyn, 2021</a>)</li> </ol> <p>Then came one full day of Design Thinking. I teamed up with <a href="https://www.linkedin.com/in/davide-ghielmetti-033732a5/">Davide</a> from economics, <a href="https://www.linkedin.com/in/isabella-loder-21419b21b/">Isabella</a> from health promotion and prevention and Sara from education. It was a rich experience to work with students from different backgrounds, which is not an opportunity often given at the university! Also I found challenging to create and pitch our idea in less than eight hours of work. I applause the time management from our coach <a href="https://www.linkedin.com/in/martinarechsteiner/">Martina</a>!</p> <p>Moreover, when talking with peers of my Master curriculum, we felt like we have not learned anything new in terms of digital technologies from this design thinking workshop. I personnally think that most of the limitations and implications of what it is to have the ideal learning setup (online, physical, synchronous, asynchronous, etc.) was already taught and discussed in class (see <a href="https://edutechwiki.unige.ch/fr/ADID">ADID EduTechWiki page</a> for more information).</p> <p>From all the ideas of what could be a future learning space, words like “personalisation”, “students’ needs”, “goal” were repeatedly used.</p> <p>Link to the promotional video of the event: https://www.youtube.com/watch?v=dWy5iNByxQ4</p> <p>Link to another blog post (en français) in the CIEL blog of the UNIGE where I share my experience:</p> <hr/> <p>What I will keep in mind after these two days :</p> <ol> <li>Aesthetics matter in digital technologies. I would advise schools to give proper credit compared to coding. When “designing” digital technologies, instructional designers should give 50% of their time to the mechanistic part of learning, and 50% of their time to making it enjoyable and appealing.</li> <li>Personalisation is one of the most important students’ need for digital technologies.</li> </ol>]]></content><author><name></name></author><category term="research"/><category term="edtech"/><category term="ui"/><summary type="html"><![CDATA[Using design thinking to build the future learning space at EduSpace Challenge]]></summary></entry></feed>